name: CI tests

on: 
  pull_request:
    branches:
      - master
      - release-**

env:
  TYK_GW_STORAGE_HOST: redis
  PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION: python

jobs:
  test:
    name: Go ${{ matrix.go-version }} Redis ${{ matrix.redis-version }}
    runs-on: ubuntu-latest
    container:
      image: titpetric/base-ci
      pull: always

    strategy:
      fail-fast: true
      matrix:
        redis-version: [6]
        python-version: ['3.9']
        go-version: ['1.19.x']

    services:
      redis:
        image: redis:${{ matrix.redis-version }}
        ports:
          - 6379:6379

    steps:
      - name: Checkout Tyk
        uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: "Add Git safe.directory"
        run: git config --global --add safe.directory $GITHUB_WORKSPACE

      - name: Codegen, lint, fmt
        run: task codegen lint fmt

      - name: Check git state
        id: git-check
        uses: ./.github/actions/check-git

      - name: Fetch base branch
        if: ${{ github.event_name == 'pull_request' }}
        run: git fetch origin ${{ github.base_ref }}

      - name: golangci-lint
        if: ${{ github.event_name == 'pull_request' }}
        run: |
          golangci-lint run --out-format checkstyle --issues-exit-code=0 --new-from-rev=origin/${{ github.base_ref }} ./... > golanglint.xml

      - name: Hygiene tests passing
        id: hygiene
        run: date

      - name: Cache
        uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Run Gateway Tests
        run: |
          ./bin/ci-tests.sh

      - name: Notify status
        if: ${{ failure() && github.event.pull_request.number }}
        uses: peter-evans/create-or-update-comment@v1
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            # :boom: CI tests failed :see_no_evil:

            ## git-state
            ```shellsession
            ${{ steps.git-check.outputs.git-state || 'all ok' }}
            ```
            
            Please look at [the run](https://github.com/TykTechnologies/tyk/pull/${{ github.event.pull_request.number }}/checks?check_run_id=${{ github.run_id }}) or in the _Checks_ tab.

      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        with:
          args: >
            -Dsonar.organization=tyktechnologies
            -Dsonar.projectKey=TykTechnologies_tyk
            -Dsonar.sources=.
            -Dsonar.exclusions=coprocess/**/*,ci/**,smoke-tests/**,apidef/oas/schema/schema.gen.go
            -Dsonar.coverage.exclusions=**/*_test.go,**/mock/*
            -Dsonar.test.inclusions=**/*_test.go
            -Dsonar.tests=.
            -Dsonar.go.coverage.reportPaths=*.cov
            -Dsonar.go.golangci-lint.reportPaths=golanglint.xml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
